%	function flightvec0(bu, ph, xl, a, b, c, rho0 )%		solves unaccelerated flight equations iteratively %		for speed magnitude umag and glideangle thdeg	function [ umag, thdeg ] = flightvec( bu, ph, xl, a, b, c, rho0 );	gravity = 9.82;	th = (pi/4)*sign(bu);	% initial slope set to 1 or -1		buoyforce = 0.001*gravity*bu;	q = ( sign(bu).*buoyforce/(xl*xl*b) ).^(4/3); 	% dynamic pressure for vertical flight	alpha = 0.;	tol = 0.001;	j = 0;	q_old = zeros(size(bu));	param = ones(size(bu));	valid = find( bu ~= 0 & sign(bu).*sign(ph) > 0 );	umag = zeros(size(bu));	thdeg = zeros(size(bu));	while(~isempty( find( abs( (q(valid)-q_old(valid))./q(valid) ) > tol )) & j <= 15);	q_old = q;	param_inv = a*a*tan(th).*tan(th).*q.^(0.25)/(4*b*c);	valid = find( param_inv > 1 & sign(bu).*sign(ph) > 0);	% valid solutions for param < 1	param(valid) = 4*b*c./(a*a*tan(th(valid)).*tan(th(valid)).*q(valid).^(0.25));	q(valid) = ( buoyforce(valid).*sin(th(valid))./(2*xl*xl*b*q(valid).^(-0.25)) ).*  ...		(1 + sqrt(1-param(valid)));	alpha(valid) = ( -a*tan(th(valid))./(2*c) ).*(1 - sqrt(1-param(valid)));	thdeg(valid) = ph(valid) - alpha(valid)';	stall = find( param_inv <= 1 | sign(bu).*sign(ph) < 0 );	% stall if param >= 1	q(stall) = 0.;	thdeg(stall) = 0.;	th = thdeg*pi/180;	j = j+1;	umag = 100*sqrt( 2*q/rho0 );	end;	